{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6584043be59013274F53017f28045118cF9eda4c",
    "txHash": "0xa8201e295630f08cae39e649b195e65202ef64d96da3e1a9a705f8c7ecd8ba89",
    "deployTransaction": {
      "hash": "0xa8201e295630f08cae39e649b195e65202ef64d96da3e1a9a705f8c7ecd8ba89",
      "type": 0,
      "accessList": null,
      "blockHash": "0x6c15102b7df86427ab49041687b2997b5bf9d4847d6fe4cc4b2279dee4c68b2e",
      "blockNumber": 17835,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xe8A6C20ab5342D2D1E43A2b07eA9f5Eac2a30b96",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x045d964b8000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 86,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xc2d86df93edf21ac525bb0ca7e3e2335240c66bfc1dd7dee4cfbe84fca48c4b8",
      "s": "0x4b18bc95d178b0f739af0ffa9f43625acf192a7477479b6310bfe4338643765f",
      "v": 1201,
      "creates": "0x6584043be59013274F53017f28045118cF9eda4c",
      "chainId": 583
    }
  },
  "proxies": [
    {
      "address": "0x82c6011849a5ad17E9300527acf599aD429e9e6E",
      "txHash": "0xa2327c57fed3b0b4f9337ad00576738043c92fc2d58cc8693c83c0c455c60f91",
      "kind": "transparent"
    },
    {
      "address": "0xa8F8cedb981831667A638f74902c42c446425406",
      "txHash": "0xb81e9e609735ece9e03abe3e2f02dcf707242b1884b81938b028f3b72b2d06c4",
      "kind": "transparent"
    },
    {
      "address": "0x79F23Cee5e2Ee911327157dF942D3cFe02dBF9D4",
      "txHash": "0x54361bc2c68e14c04ba218ffe9be717628024e97d4c06c3105ec32f55abd3bb5",
      "kind": "transparent"
    },
    {
      "address": "0x35a0F36A269622270b151c1c7a920897B5C28E9a",
      "txHash": "0xfcefa3c2e530d11dbe472bc40a08c7eb3a9eb861e546e87d0bd24dbb5f92ef47",
      "kind": "transparent"
    },
    {
      "address": "0xAE2d7aF8c407503Ebf74f826D600CF29B7a1dF1a",
      "txHash": "0x9f5f652b86e8fcbb27570e03f2634cfcb5958d5a0f37f0b0f8375b58c2db70ed",
      "kind": "transparent"
    },
    {
      "address": "0xBCec2BAa7b9F72679Be524592EDb9Bf0f4632a18",
      "txHash": "0xf9bdab6262f3b5dadaad39fb6e05b300f48d6a5e32cf0ecd11d3c21734b5c902",
      "kind": "transparent"
    },
    {
      "address": "0xC860896E3F94EF58fe1aA30adD387C6123973878",
      "txHash": "0xf6bcc4db4d915c554187fc4c40ea357e251e3f713d4c3586715b287b0fed0742",
      "kind": "transparent"
    }
  ],
  "impls": {
    "00db674474f5b6e2ba59821e15ba708210c68e269170ca67c3ea84051b8e6f92": {
      "address": "0x7d68F975679bBE30AF227f63235888DeE81F5931",
      "txHash": "0x37714b478166c0fb2dd279411f6a83fd06c4cb94c99ee8652a02be8f25543122",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "registeredToken",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:44"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "filledSwap",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:45"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "swapMappingIncoming",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:46"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "swapMappingOutgoing",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ab92aa9b1a5822e47466d791f79dcccae8fe6a9a468fea8ec55a85b3ddbac690": {
      "address": "0xBf3B0486A804FEb175Ba79a1c099433C336ea8FD",
      "txHash": "0xefcd6535e5688874d366bc1d7990482d28d65b6a05e0d5464d132e8417b88e0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "registeredToken",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:44"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "filledSwap",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:45"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "swapMappingIncoming",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:46"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "swapMappingOutgoing",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c2aed2cd573400ab0ef53da0b924480a1aaa3029bc0944fe7a57c7205d1c4a78": {
      "address": "0x06E6bd7747D273e003Cc68f919bBB4dCd2658Ab5",
      "txHash": "0xbdb2960badc0d35509617dc52a50fd521c368c91efd57d6d6f4dcd0d9a252fc7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "registeredToken",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:43"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "filledSwap",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:44"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "swapMappingIncoming",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:45"
          },
          {
            "contract": "ERC721SwapAgent",
            "label": "swapMappingOutgoing",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC721SwapAgent.sol:46"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "e34256a6e12924e1a1e03edac15103c3e4e5a481380934df90b28b068ac655b2": {
      "address": "0x6C44BCb85602BD6B3BE84a872e59dC7A1f249481",
      "txHash": "0xbc7c7e3054dbbe24f13b36263cc369d29d939a7550745125c3eb945e048d7478",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:26"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:39"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "registeredToken",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:43"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "filledSwap",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:44"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "swapMappingIncoming",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:45"
          },
          {
            "contract": "ERC1155SwapAgent",
            "label": "swapMappingOutgoing",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts\\agents\\ERC1155SwapAgent.sol:46"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
