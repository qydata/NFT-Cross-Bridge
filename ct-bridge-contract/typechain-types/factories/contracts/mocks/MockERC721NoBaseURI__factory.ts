/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockERC721NoBaseURI,
  MockERC721NoBaseURIInterface,
} from "../../../contracts/mocks/MockERC721NoBaseURI";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f9338038062001f93833981016040819052620000349162000237565b8151829082906200004d906000906020850190620000de565b50805162000063906001906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f1565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec906200029e565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b600082601f83011262000195578081fd5b81516001600160401b0380821115620001b257620001b2620002db565b604051601f8301601f19908116603f01168101908282118183101715620001dd57620001dd620002db565b81604052838152602092508683858801011115620001f9578485fd5b8491505b838210156200021c5785820183015181830184015290820190620001fd565b838211156200022d57848385830101525b9695505050505050565b600080604083850312156200024a578182fd5b82516001600160401b038082111562000261578384fd5b6200026f8683870162000184565b9350602085015191508082111562000285578283fd5b50620002948582860162000184565b9150509250929050565b600281046001821680620002b357607f821691505b60208210811415620002d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c9280620003016000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd1461027f578063e985e9c514610292578063f2fde38b146102ce57610136565b8063a22cb46514610259578063b88d4fde1461026c57610136565b8063715018a6146102255780638da5cb5b1461022d57806395d89b411461023e578063a14481941461024657610136565b8063162094c41161010957806342842e0e116100ee57806342842e0e146101de5780636352211e146101f157806370a082311461020457610136565b8063162094c4146101b857806323b872dd146101cb57610136565b806301ffc9a71461013b57806306fdde0314610163578063081812fc14610178578063095ea7b3146101a3575b600080fd5b61014e6101493660046119ba565b6102e1565b60405190151581526020015b60405180910390f35b61016b610380565b60405161015a9190611b18565b61018b6101863660046119f2565b610412565b6040516001600160a01b03909116815260200161015a565b6101b66101b1366004611991565b6104ac565b005b6101b66101c6366004611a0a565b6105de565b6101b66101d9366004611847565b610678565b6101b66101ec366004611847565b6106ff565b61018b6101ff3660046119f2565b61071a565b6102176102123660046117fb565b6107a5565b60405190815260200161015a565b6101b661083f565b6007546001600160a01b031661018b565b61016b6108a5565b6101b6610254366004611991565b6108b4565b6101b6610267366004611957565b61091c565b6101b661027a366004611882565b6109ee565b61016b61028d3660046119f2565b610a7c565b61014e6102a0366004611815565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b66102dc3660046117fb565b610a87565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061034457506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061037857507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b90505b919050565b60606000805461038f90611b9a565b80601f01602080910402602001604051908101604052809291908181526020018280546103bb90611b9a565b80156104085780601f106103dd57610100808354040283529160200191610408565b820191906000526020600020905b8154815290600101906020018083116103eb57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104905760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104b78261071a565b9050806001600160a01b0316836001600160a01b031614156105415760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610487565b336001600160a01b038216148061055d575061055d81336102a0565b6105cf5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610487565b6105d98383610b69565b505050565b6007546001600160a01b031633146106385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b6105d98383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610be492505050565b6106823382610c8d565b6106f45760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610487565b6105d9838383610d84565b6105d9838383604051806020016040528060008152506109ee565b6000818152600260205260408120546001600160a01b0316806103785760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610487565b60006001600160a01b0382166108235760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610487565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146108995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b6108a36000610f5e565b565b60606001805461038f90611b9a565b6007546001600160a01b0316331461090e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b6109188282610fbd565b5050565b6001600160a01b0382163314156109755760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610487565b3360008181526005602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109e2911515815260200190565b60405180910390a35050565b6109f83383610c8d565b610a6a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610487565b610a7684848484610fd7565b50505050565b606061037882611055565b6007546001600160a01b03163314610ae15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b6001600160a01b038116610b5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610487565b610b6681610f5e565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610bab8261071a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000828152600260205260409020546001600160a01b0316610c6e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610487565b600082815260066020908152604090912082516105d99284019061174b565b6000818152600260205260408120546001600160a01b0316610d065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610487565b6000610d118361071a565b9050806001600160a01b0316846001600160a01b03161480610d4c5750836001600160a01b0316610d4184610412565b6001600160a01b0316145b80610d7c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610d978261071a565b6001600160a01b031614610e135760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610487565b6001600160a01b038216610e8e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610487565b610e99600082610b69565b6001600160a01b0383166000908152600360205260408120805460019290610ec2908490611b57565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ef0908490611b2b565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109188282604051806020016040528060008152506111e1565b610fe2848484610d84565b610fee8484848461125f565b610a765760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610487565b6000818152600260205260409020546060906001600160a01b03166110e25760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610487565b600082815260066020526040812080546110fb90611b9a565b80601f016020809104026020016040519081016040528092919081815260200182805461112790611b9a565b80156111745780601f1061114957610100808354040283529160200191611174565b820191906000526020600020905b81548152906001019060200180831161115757829003601f168201915b50505050509050600061119260408051602081019091526000815290565b90508051600014156111a65750905061037b565b8151156111d85780826040516020016111c0929190611aad565b6040516020818303038152906040529250505061037b565b610d7c846113b7565b6111eb83836114ad565b6111f8600084848461125f565b6105d95760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610487565b60006001600160a01b0384163b156113ac57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112a3903390899088908890600401611adc565b602060405180830381600087803b1580156112bd57600080fd5b505af19250505080156112ed575060408051601f3d908101601f191682019092526112ea918101906119d6565b60015b611392573d80801561131b576040519150601f19603f3d011682016040523d82523d6000602084013e611320565b606091505b50805161138a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610487565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d7c565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166114445760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610487565b600061145b60408051602081019091526000815290565b9050600081511161147b57604051806020016040528060008152506114a6565b80611485846115fc565b604051602001611496929190611aad565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166115035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610487565b6000818152600260205260409020546001600160a01b0316156115685760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610487565b6001600160a01b0382166000908152600360205260408120805460019290611591908490611b2b565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161163d575060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015261037b565b8160005b8115611667578061165181611bd5565b91506116609050600a83611b43565b9150611641565b60008167ffffffffffffffff81111561169057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156116ba576020820181803683370190505b5090505b8415610d7c576116cf600183611b57565b91506116dc600a86611bf0565b6116e7906030611b2b565b60f81b81838151811061170a57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611744600a86611b43565b94506116be565b82805461175790611b9a565b90600052602060002090601f01602090048101928261177957600085556117bf565b82601f1061179257805160ff19168380011785556117bf565b828001600101855582156117bf579182015b828111156117bf5782518255916020019190600101906117a4565b506117cb9291506117cf565b5090565b5b808211156117cb57600081556001016117d0565b80356001600160a01b038116811461037b57600080fd5b60006020828403121561180c578081fd5b6114a6826117e4565b60008060408385031215611827578081fd5b611830836117e4565b915061183e602084016117e4565b90509250929050565b60008060006060848603121561185b578081fd5b611864846117e4565b9250611872602085016117e4565b9150604084013590509250925092565b60008060008060808587031215611897578081fd5b6118a0856117e4565b93506118ae602086016117e4565b925060408501359150606085013567ffffffffffffffff808211156118d1578283fd5b818701915087601f8301126118e4578283fd5b8135818111156118f6576118f6611c30565b604051601f8201601f19908116603f0116810190838211818310171561191e5761191e611c30565b816040528281528a6020848701011115611936578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611969578182fd5b611972836117e4565b915060208301358015158114611986578182fd5b809150509250929050565b600080604083850312156119a3578182fd5b6119ac836117e4565b946020939093013593505050565b6000602082840312156119cb578081fd5b81356114a681611c46565b6000602082840312156119e7578081fd5b81516114a681611c46565b600060208284031215611a03578081fd5b5035919050565b600080600060408486031215611a1e578283fd5b83359250602084013567ffffffffffffffff80821115611a3c578384fd5b818601915086601f830112611a4f578384fd5b813581811115611a5d578485fd5b876020828501011115611a6e578485fd5b6020830194508093505050509250925092565b60008151808452611a99816020860160208601611b6e565b601f01601f19169290920160200192915050565b60008351611abf818460208801611b6e565b835190830190611ad3818360208801611b6e565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611b0e6080830184611a81565b9695505050505050565b6000602082526114a66020830184611a81565b60008219821115611b3e57611b3e611c04565b500190565b600082611b5257611b52611c1a565b500490565b600082821015611b6957611b69611c04565b500390565b60005b83811015611b89578181015183820152602001611b71565b83811115610a765750506000910152565b600281046001821680611bae57607f821691505b60208210811415611bcf57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611be957611be9611c04565b5060010190565b600082611bff57611bff611c1a565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610b6657600080fdfea2646970667358221220360caecb71c1c4d79df9ed03d0d8cd8f2e4e782ba3d37040f1567cf2dc9838b364736f6c63430008020033";

type MockERC721NoBaseURIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721NoBaseURIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721NoBaseURI__factory extends ContractFactory {
  constructor(...args: MockERC721NoBaseURIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721NoBaseURI> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<MockERC721NoBaseURI>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): MockERC721NoBaseURI {
    return super.attach(address) as MockERC721NoBaseURI;
  }
  override connect(signer: Signer): MockERC721NoBaseURI__factory {
    return super.connect(signer) as MockERC721NoBaseURI__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721NoBaseURIInterface {
    return new utils.Interface(_abi) as MockERC721NoBaseURIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721NoBaseURI {
    return new Contract(address, _abi, signerOrProvider) as MockERC721NoBaseURI;
  }
}
