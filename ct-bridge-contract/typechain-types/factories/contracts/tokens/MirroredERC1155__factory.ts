/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MirroredERC1155,
  MirroredERC1155Interface,
} from "../../../contracts/tokens/MirroredERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612d93806100206000396000f3fe608060405234801561001057600080fd5b506004361061016b5760003560e01c8063715018a6116100cd578063e985e9c511610081578063f2fde38b11610066578063f2fde38b146102f7578063f5298aca1461030a578063f62d18881461031d5761016b565b8063e985e9c5146102a8578063f242432a146102e45761016b565b80638456cb59116100b25780638456cb59146102725780638da5cb5b1461027a578063a22cb465146102955761016b565b8063715018a614610257578063731133e91461025f5761016b565b80632eb2c2d6116101245780634e1273f4116101095780634e1273f41461021c5780635c975abb1461023c5780636b20c454146102445761016b565b80632eb2c2d6146102015780633f4ba83a146102145761016b565b806302fe53051161015557806302fe5305146101b95780630e89341c146101ce5780631f7fdffa146101ee5761016b565b8062fdd58e1461017057806301ffc9a714610196575b600080fd5b61018361017e366004612824565b610330565b6040519081526020015b60405180910390f35b6101a96101a436600461299b565b6103db565b604051901515815260200161018d565b6101cc6101c73660046129d3565b61047a565b005b6101e16101dc366004612a21565b6104e0565b60405161018d9190612ba0565b6101cc6101fc366004612755565b610574565b6101cc61020f3660046125db565b6105e0565b6101cc610682565b61022f61022a3660046128d2565b6106e6565b60405161018d9190612b5f565b6101a961085c565b6101cc6102523660046126e4565b610866565b6101cc6108f0565b6101cc61026d36600461287f565b610954565b6101cc6109ba565b6097546040516001600160a01b03909116815260200161018d565b6101cc6102a33660046127ea565b610a1c565b6101a96102b63660046125a9565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101cc6102f2366004612681565b610b14565b6101cc61030536600461258f565b610b9b565b6101cc61031836600461284d565b610c7a565b6101cc61032b3660046129d3565b610cff565b60006001600160a01b0383166103b35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061043e57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061047257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b90505b919050565b6097546001600160a01b031633146104d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6104dd81610ddd565b50565b6060606780546104ef90612bef565b80601f016020809104026020016040519081016040528092919081815260200182805461051b90612bef565b80156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b50505050509050919050565b6097546001600160a01b031633146105ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6105da84848484610df0565b50505050565b6001600160a01b0385163314806105fc57506105fc85336102b6565b61066e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016103aa565b61067b8585858585610fe2565b5050505050565b6097546001600160a01b031633146106dc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6106e461126d565b565b6060815183511461075f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016103aa565b6000835167ffffffffffffffff81111561078957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107b2578160200160208202803683370190505b50905060005b8451811015610854576108198582815181106107e457634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061080c57634e487b7160e01b600052603260045260246000fd5b6020026020010151610330565b82828151811061083957634e487b7160e01b600052603260045260246000fd5b602090810291909101015261084d81612c57565b90506107b8565b509392505050565b60c95460ff165b90565b6001600160a01b038316331480610882575061088283336102b6565b6108e05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103aa565b6108eb83838361130b565b505050565b6097546001600160a01b0316331461094a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6106e46000611571565b6097546001600160a01b031633146109ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6105da848484846115db565b6097546001600160a01b03163314610a145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6106e46116ed565b336001600160a01b0383161415610a9b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016103aa565b3360008181526066602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b08911515815260200190565b60405180910390a35050565b6001600160a01b038516331480610b305750610b3085336102b6565b610b8e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103aa565b61067b8585858585611777565b6097546001600160a01b03163314610bf55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103aa565b6001600160a01b038116610c715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103aa565b6104dd81611571565b6001600160a01b038316331480610c965750610c9683336102b6565b610cf45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103aa565b6108eb838383611919565b600054610100900460ff1680610d18575060005460ff16155b610d7b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015610da6576000805460ff1961ff0019909116610100171660011790555b610daf82611a96565b610db7611b56565b610dbf611c21565b610dc7611cd8565b8015610dd9576000805461ff00191690555b5050565b8051610dd99060679060208401906123e9565b6001600160a01b038416610e505760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103aa565b8151835114610eb25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103aa565b33610ec281600087878787611d97565b60005b8451811015610f7a57838181518110610eee57634e487b7160e01b600052603260045260246000fd5b602002602001015160656000878481518110610f1a57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f629190612bd7565b90915550819050610f7281612c57565b915050610ec5565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610fcb929190612b72565b60405180910390a461067b81600087878787611df1565b81518351146110445760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103aa565b6001600160a01b0384166110a85760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103aa565b336110b7818787878787611d97565b60005b84518110156111ff5760008582815181106110e557634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061111157634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156111a55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016103aa565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906111e4908490612bd7565b92505081905550505050806111f890612c57565b90506110ba565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161124f929190612b72565b60405180910390a4611265818787878787611df1565b505050505050565b61127561085c565b6112c15760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016103aa565b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03831661136d5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103aa565b80518251146113cf5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103aa565b60003390506113f281856000868660405180602001604052806000815250611d97565b60005b835181101561151257600084828151811061142057634e487b7160e01b600052603260045260246000fd5b60200260200101519050600084838151811061144c57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156114d95760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103aa565b60009283526065602090815260408085206001600160a01b038b168652909152909220910390558061150a81612c57565b9150506113f5565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611563929190612b72565b60405180910390a450505050565b609780546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661163b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103aa565b3361165b8160008761164c88611fa6565b61165588611fa6565b87611d97565b60008481526065602090815260408083206001600160a01b03891684529091528120805485929061168d908490612bd7565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461067b81600087878787611fff565b6116f561085c565b156117425760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016103aa565b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112ee3390565b6001600160a01b0384166117db5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103aa565b336117eb81878761164c88611fa6565b60008481526065602090815260408083206001600160a01b038a168452909152902054838110156118715760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016103aa565b60008581526065602090815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906118b0908490612bd7565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611910828888888888611fff565b50505050505050565b6001600160a01b03831661197b5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103aa565b336119aa8185600061198c87611fa6565b61199587611fa6565b60405180602001604052806000815250611d97565b60008381526065602090815260408083206001600160a01b038816845290915290205482811015611a295760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103aa565b60008481526065602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b600054610100900460ff1680611aaf575060005460ff16155b611b125760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015611b3d576000805460ff1961ff0019909116610100171660011790555b611b4561210a565b611b4d61210a565b610dc7826121c4565b600054610100900460ff1680611b6f575060005460ff16155b611bd25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015611bfd576000805460ff1961ff0019909116610100171660011790555b611c0561210a565b611c0d612274565b80156104dd576000805461ff001916905550565b600054610100900460ff1680611c3a575060005460ff16155b611c9d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015611cc8576000805460ff1961ff0019909116610100171660011790555b611cd061210a565b611c0d612324565b600054610100900460ff1680611cf1575060005460ff16155b611d545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015611d7f576000805460ff1961ff0019909116610100171660011790555b611d8761210a565b611d8f61210a565b611c0d61210a565b611d9f61085c565b15611dec5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016103aa565b611265565b6001600160a01b0384163b156112655760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e359089908990889088908890600401612abe565b602060405180830381600087803b158015611e4f57600080fd5b505af1925050508015611e7f575060408051601f3d908101601f19168201909252611e7c918101906129b7565b60015b611f3557611e8b612c9e565b806308c379a01415611ec55750611ea0612cb5565b80611eab5750611ec7565b8060405162461bcd60e51b81526004016103aa9190612ba0565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016103aa565b6001600160e01b0319811663bc197c8160e01b146119105760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016103aa565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611fee57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156112655760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906120439089908990889088908890600401612b1c565b602060405180830381600087803b15801561205d57600080fd5b505af192505050801561208d575060408051601f3d908101601f1916820190925261208a918101906129b7565b60015b61209957611e8b612c9e565b6001600160e01b0319811663f23a6e6160e01b146119105760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016103aa565b600054610100900460ff1680612123575060005460ff16155b6121865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff16158015611c0d576000805460ff1961ff00199091166101001716600117905580156104dd576000805461ff001916905550565b600054610100900460ff16806121dd575060005460ff16155b6122405760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff1615801561226b576000805460ff1961ff0019909116610100171660011790555b610dc782610ddd565b600054610100900460ff168061228d575060005460ff16155b6122f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff1615801561231b576000805460ff1961ff0019909116610100171660011790555b611c0d33611571565b600054610100900460ff168061233d575060005460ff16155b6123a05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103aa565b600054610100900460ff161580156123cb576000805460ff1961ff0019909116610100171660011790555b60c9805460ff1916905580156104dd576000805461ff001916905550565b8280546123f590612bef565b90600052602060002090601f016020900481019282612417576000855561245d565b82601f1061243057805160ff191683800117855561245d565b8280016001018555821561245d579182015b8281111561245d578251825591602001919060010190612442565b5061246992915061246d565b5090565b5b80821115612469576000815560010161246e565b600067ffffffffffffffff83111561249c5761249c612c88565b6040516124b3601f8501601f191660200182612c2a565b8091508381528484840111156124c857600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461047557600080fd5b600082601f830112612507578081fd5b8135602061251482612bb3565b6040516125218282612c2a565b83815282810191508583018385028701840188101561253e578586fd5b855b8581101561255c57813584529284019290840190600101612540565b5090979650505050505050565b600082601f830112612579578081fd5b61258883833560208501612482565b9392505050565b6000602082840312156125a0578081fd5b612588826124e0565b600080604083850312156125bb578081fd5b6125c4836124e0565b91506125d2602084016124e0565b90509250929050565b600080600080600060a086880312156125f2578081fd5b6125fb866124e0565b9450612609602087016124e0565b9350604086013567ffffffffffffffff80821115612625578283fd5b61263189838a016124f7565b94506060880135915080821115612646578283fd5b61265289838a016124f7565b93506080880135915080821115612667578283fd5b5061267488828901612569565b9150509295509295909350565b600080600080600060a08688031215612698578081fd5b6126a1866124e0565b94506126af602087016124e0565b93506040860135925060608601359150608086013567ffffffffffffffff8111156126d8578182fd5b61267488828901612569565b6000806000606084860312156126f8578283fd5b612701846124e0565b9250602084013567ffffffffffffffff8082111561271d578384fd5b612729878388016124f7565b9350604086013591508082111561273e578283fd5b5061274b868287016124f7565b9150509250925092565b6000806000806080858703121561276a578384fd5b612773856124e0565b9350602085013567ffffffffffffffff8082111561278f578485fd5b61279b888389016124f7565b945060408701359150808211156127b0578384fd5b6127bc888389016124f7565b935060608701359150808211156127d1578283fd5b506127de87828801612569565b91505092959194509250565b600080604083850312156127fc578182fd5b612805836124e0565b915060208301358015158114612819578182fd5b809150509250929050565b60008060408385031215612836578182fd5b61283f836124e0565b946020939093013593505050565b600080600060608486031215612861578081fd5b61286a846124e0565b95602085013595506040909401359392505050565b60008060008060808587031215612894578182fd5b61289d856124e0565b93506020850135925060408501359150606085013567ffffffffffffffff8111156128c6578182fd5b6127de87828801612569565b600080604083850312156128e4578182fd5b823567ffffffffffffffff808211156128fb578384fd5b818501915085601f83011261290e578384fd5b8135602061291b82612bb3565b6040516129288282612c2a565b8381528281019150858301838502870184018b1015612945578889fd5b8896505b8487101561296e5761295a816124e0565b835260019690960195918301918301612949565b5096505086013592505080821115612984578283fd5b50612991858286016124f7565b9150509250929050565b6000602082840312156129ac578081fd5b813561258881612d47565b6000602082840312156129c8578081fd5b815161258881612d47565b6000602082840312156129e4578081fd5b813567ffffffffffffffff8111156129fa578182fd5b8201601f81018413612a0a578182fd5b612a1984823560208401612482565b949350505050565b600060208284031215612a32578081fd5b5035919050565b6000815180845260208085019450808401835b83811015612a6857815187529582019590820190600101612a4c565b509495945050505050565b60008151808452815b81811015612a9857602081850181015186830182015201612a7c565b81811115612aa95782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152612aea60a0830186612a39565b8281036060840152612afc8186612a39565b90508281036080840152612b108185612a73565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612b5460a0830184612a73565b979650505050505050565b6000602082526125886020830184612a39565b600060408252612b856040830185612a39565b8281036020840152612b978185612a39565b95945050505050565b6000602082526125886020830184612a73565b600067ffffffffffffffff821115612bcd57612bcd612c88565b5060209081020190565b60008219821115612bea57612bea612c72565b500190565b600281046001821680612c0357607f821691505b60208210811415612c2457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715612c5057612c50612c88565b6040525050565b6000600019821415612c6b57612c6b612c72565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561086357600481823e5160e01c90565b600060443d1015612cc557610863565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612cf7575050505050610863565b8285019150815181811115612d1157505050505050610863565b843d8701016020828501011115612d2d57505050505050610863565b612d3c60208286010187612c2a565b509094505050505090565b6001600160e01b0319811681146104dd57600080fdfea264697066735822122007e9ce280a26c1cc8c4f1ec1c2498857f6efd73e62e073881d85d2f79d9cdb1764736f6c63430008020033";

type MirroredERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MirroredERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MirroredERC1155__factory extends ContractFactory {
  constructor(...args: MirroredERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MirroredERC1155> {
    return super.deploy(overrides || {}) as Promise<MirroredERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MirroredERC1155 {
    return super.attach(address) as MirroredERC1155;
  }
  override connect(signer: Signer): MirroredERC1155__factory {
    return super.connect(signer) as MirroredERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MirroredERC1155Interface {
    return new utils.Interface(_abi) as MirroredERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MirroredERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MirroredERC1155;
  }
}
