/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155HolderUpgradeable,
  ERC1155HolderUpgradeableInterface,
} from "../../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610441806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100bf575b600080fd5b61005961005436600461037c565b6100f7565b60405190151581526020015b60405180910390f35b6100a661007c366004610273565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6040516001600160e01b03199091168152602001610065565b6100a66100cd366004610319565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b60006001600160e01b031982167f4e2312e000000000000000000000000000000000000000000000000000000000148061015a57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b90505b919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015d57600080fd5b600082601f830112610196578081fd5b8135602067ffffffffffffffff8211156101b2576101b26103dc565b8082026101c08282016103ab565b8381528281019086840183880185018910156101da578687fd5b8693505b858410156101fc5780358352600193909301929184019184016101de565b50979650505050505050565b600082601f830112610218578081fd5b813567ffffffffffffffff811115610232576102326103dc565b610245601f8201601f19166020016103ab565b818152846020838601011115610259578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a0868803121561028a578081fd5b61029386610162565b94506102a160208701610162565b9350604086013567ffffffffffffffff808211156102bd578283fd5b6102c989838a01610186565b945060608801359150808211156102de578283fd5b6102ea89838a01610186565b935060808801359150808211156102ff578283fd5b5061030c88828901610208565b9150509295509295909350565b600080600080600060a08688031215610330578081fd5b61033986610162565b945061034760208701610162565b93506040860135925060608601359150608086013567ffffffffffffffff811115610370578182fd5b61030c88828901610208565b60006020828403121561038d578081fd5b81356001600160e01b0319811681146103a4578182fd5b9392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156103d4576103d46103dc565b604052919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122012f10e3cbd3dd80260b67ccf276151db6d9b320a904d65792f9b06f749f6b1f464736f6c63430008020033";

type ERC1155HolderUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155HolderUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155HolderUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155HolderUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155HolderUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155HolderUpgradeable {
    return super.attach(address) as ERC1155HolderUpgradeable;
  }
  override connect(signer: Signer): ERC1155HolderUpgradeable__factory {
    return super.connect(signer) as ERC1155HolderUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderUpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155HolderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155HolderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155HolderUpgradeable;
  }
}
