/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200182238038062001822833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600281046001821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6115e4806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957610087565b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a36600461113e565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004611230565b610235565b60405190151581526020016100a9565b6100e86100e336600461126f565b6102d4565b6040516100a991906113ee565b610108610103366004610ffb565b610368565b005b61011d610118366004611167565b61041c565b6040516100a991906113ad565b610108610138366004611104565b610592565b6100c561014b366004610fc9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101873660046110a1565b6106ba565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061029857506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b806102cc57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b90505b919050565b6060600280546102e39061143d565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061143d565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b50505050509050919050565b610370610767565b6001600160a01b0316856001600160a01b0316148061039657506103968561014b610767565b6104085760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610206565b610415858585858561076c565b5050505050565b606081518351146104955760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff8111156104bf57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104e8578160200160208202803683370190505b50905060005b845181101561058a5761054f85828151811061051a57634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061054257634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b82828151811061056f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610583816114a5565b90506104ee565b509392505050565b816001600160a01b03166105a4610767565b6001600160a01b031614156106215760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b806001600061062e610767565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610672610767565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106ae911515815260200190565b60405180910390a35050565b6106c2610767565b6001600160a01b0316856001600160a01b031614806106e857506106e88561014b610767565b61075a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610206565b6104158585858585610a06565b335b90565b81518351146107e35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166108475760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b6000610851610767565b905060005b845181101561099857600085828151811061088157634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106108ad57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109405760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061097d908490611425565b9250508190555050505080610991906114a5565b9050610856565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109e89291906113c0565b60405180910390a46109fe818787878787610bb8565b505050505050565b6001600160a01b038416610a6a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b6000610a74610767565b9050610a8e818787610a8588610d6d565b61041588610d6d565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610b125760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610b4f908490611425565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610baf828888888888610dc6565b50505050505050565b6001600160a01b0384163b156109fe5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bfc908990899088908890889060040161130c565b602060405180830381600087803b158015610c1657600080fd5b505af1925050508015610c46575060408051601f3d908101601f19168201909252610c4391810190611253565b60015b610cfc57610c526114ec565b806308c379a01415610c8c5750610c67611503565b80610c725750610c8e565b8060405162461bcd60e51b815260040161020691906113ee565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610baf5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610db557634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156109fe5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e0a908990899088908890889060040161136a565b602060405180830381600087803b158015610e2457600080fd5b505af1925050508015610e54575060408051601f3d908101601f19168201909252610e5191810190611253565b60015b610e6057610c526114ec565b6001600160e01b0319811663f23a6e6160e01b14610baf5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b03811681146102cf57600080fd5b600082601f830112610ef8578081fd5b81356020610f0582611401565b604051610f128282611478565b838152828101915085830183850287018401881015610f2f578586fd5b855b85811015610f4d57813584529284019290840190600101610f31565b5090979650505050505050565b600082601f830112610f6a578081fd5b813567ffffffffffffffff811115610f8457610f846114d6565b604051610f9b601f8301601f191660200182611478565b818152846020838601011115610faf578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610fdb578182fd5b610fe483610ed1565b9150610ff260208401610ed1565b90509250929050565b600080600080600060a08688031215611012578081fd5b61101b86610ed1565b945061102960208701610ed1565b9350604086013567ffffffffffffffff80821115611045578283fd5b61105189838a01610ee8565b94506060880135915080821115611066578283fd5b61107289838a01610ee8565b93506080880135915080821115611087578283fd5b5061109488828901610f5a565b9150509295509295909350565b600080600080600060a086880312156110b8578081fd5b6110c186610ed1565b94506110cf60208701610ed1565b93506040860135925060608601359150608086013567ffffffffffffffff8111156110f8578182fd5b61109488828901610f5a565b60008060408385031215611116578182fd5b61111f83610ed1565b915060208301358015158114611133578182fd5b809150509250929050565b60008060408385031215611150578182fd5b61115983610ed1565b946020939093013593505050565b60008060408385031215611179578182fd5b823567ffffffffffffffff80821115611190578384fd5b818501915085601f8301126111a3578384fd5b813560206111b082611401565b6040516111bd8282611478565b8381528281019150858301838502870184018b10156111da578889fd5b8896505b84871015611203576111ef81610ed1565b8352600196909601959183019183016111de565b5096505086013592505080821115611219578283fd5b5061122685828601610ee8565b9150509250929050565b600060208284031215611241578081fd5b813561124c81611595565b9392505050565b600060208284031215611264578081fd5b815161124c81611595565b600060208284031215611280578081fd5b5035919050565b6000815180845260208085019450808401835b838110156112b65781518752958201959082019060010161129a565b509495945050505050565b60008151808452815b818110156112e6576020818501810151868301820152016112ca565b818111156112f75782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261133860a0830186611287565b828103606084015261134a8186611287565b9050828103608084015261135e81856112c1565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526113a260a08301846112c1565b979650505050505050565b60006020825261124c6020830184611287565b6000604082526113d36040830185611287565b82810360208401526113e58185611287565b95945050505050565b60006020825261124c60208301846112c1565b600067ffffffffffffffff82111561141b5761141b6114d6565b5060209081020190565b60008219821115611438576114386114c0565b500190565b60028104600182168061145157607f821691505b6020821081141561147257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561149e5761149e6114d6565b6040525050565b60006000198214156114b9576114b96114c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561076957600481823e5160e01c90565b600060443d101561151357610769565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611545575050505050610769565b828501915081518181111561155f57505050505050610769565b843d870101602082850101111561157b57505050505050610769565b61158a60208286010187611478565b509094505050505090565b6001600160e01b0319811681146115ab57600080fd5b5056fea2646970667358221220e79ac2b5573f2520cd4bab4848631b6e6088016f7eb49b8e9efcdfd52aa9877f64736f6c63430008020033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
